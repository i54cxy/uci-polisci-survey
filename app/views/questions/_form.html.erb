<!-- needed in questions/new,edit -->
<%= form_with(model: [@survey, @page, question], local: true) do |form| %>
  <% if question.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(question.errors.count, "error") %> prohibited this question from being saved:</h2>

      <ul>
      <% question.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field" id="questionTypeField">
    <%= form.label :q_type %> <br>
    <%= form.select :q_type, Question.types.keys, {}, {class: 'form-control'} %>
  </div> <br>

  <div class="field">
    <%= form.label :description %> <br>
    <%= form.text_area :description, class: 'form-control', rows: 8, :required => true %>
  </div>

  <div class="field">
    <!-- <% if params[:survey_id].present? %> <br> -->
      <%= form.hidden_field :survey_id, value: params[:survey_id] %>
    <!-- <% else %>
      <%= form.label :survey_id %>
      <%= form.collection_select :survey_id, Survey.order(created_at: :desc), :id, :name, include_blank: true %>
    <% end %> -->
  </div> <br>

  <div class="field" id="settingsField">
      <div id="options"></div>
      <button type="button" id="addButton" style="margin-bottom: 10px">Add Option</button>
  </div>

  <div class="field" id="videoUrlField">
    <%= form.label :video_url %> <br>
    <textarea class="form-control" rows="4" style="margin-bottom: 10px" name="question[settings]" id="question_settings"><%= question.settings['url'] if question.settings %></textarea>
  </div>

  <div class="field" id="gameField">
    <div>Game ID
    <input type="number" class="form-control" style="margin-bottom: 10px" value ="<%= question.settings['GameID'] if question.settings %>">
    </div>
  </div>

  <div class="hidden" id="realSettingsField">
    <%= form.label :settings %> <br>
    <%= form.text_area :settings %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>

<% end %>

<script type="text/javascript">
  var $ = function(type, params) {
    var el = document.createElement(type)
    for (var key in params) {
      el[key] = params[key];
    }
    return el;
  }

  // automatically hide/show the settings field
  var settingsField = document.querySelector('#settingsField');
  var gameField = document.querySelector('#gameField');
  var qTypeSelectField = document.querySelector("#questionTypeField select");
  var videoUrlField = document.querySelector("#videoUrlField");
  
  qTypeSelectField.onchange = function(){
    if (qTypeSelectField.value === 'multiple_choice' ||
      qTypeSelectField.value === 'button_group') {
      settingsField.classList.remove('hidden');
    } else {
      if (!settingsField.classList.contains('hidden')) {
        settingsField.classList.add('hidden');
      }
    }

    if (qTypeSelectField.value === 'game'){
      gameField.classList.remove('hidden');
    } else {
      if (!gameField.classList.contains('hidden')) {
        gameField.classList.add('hidden');
      }
    }

    if (qTypeSelectField.value === 'video'){
      videoUrlField.classList.remove('hidden');
    } else {
      if (!videoUrlField.classList.contains('hidden')) {
        videoUrlField.classList.add('hidden');
      }
    }
  }

  // initially decide if we should display Settings block
  qTypeSelectField.onchange();

// Decode HTML entities, e.g.:
// &quot; => "
// &apos; => '
  var unescape = function(str) {
    var el = $('textarea');
    el.innerHTML = str;
    return el.textContent;
  }

  var rubyObjToJson = function(str) {
    return str.replace(/=>/g, ':');
  }

  //
  var optionsField = document.querySelector('#options');
  var options = JSON.parse(rubyObjToJson(unescape("<%= question.settings %>")) || "{}");
  var renderOptions = function(options) {
    optionsField.innerHTML = '';
    // options= {a:1, b:1}
    // Object.entries(options) => [[a,1], [b,1]]
    Object.entries(options).forEach(function(entry) {
      var key = entry[0];
      var val = entry[1];
      var keyEl = $('input', { type:'text', value: key});
      keyEl.className = "form-control";
      var valEl = $('textarea', { type:'text', value: val});
      valEl.className = 'form-control';
      valEl.required = true;
      valEl.setAttribute('rows', 2);
      var wrapper1 = $('div');
      wrapper1.appendChild(document.createTextNode('Option Label '));
      wrapper1.appendChild(keyEl);
      var wrapper2 = $('div', { style: 'margin-bottom: 5px' });
      wrapper2.appendChild(document.createTextNode('Option Value '));
      wrapper2.appendChild(valEl);
      var wrapper = $('div');
      wrapper.appendChild(wrapper1);
      wrapper.appendChild(wrapper2);
      var removeButton = $('button', { style: 'margin-bottom: 5px', onclick: (function() {
        return function() {
          delete options[key];
          renderOptions(options);
        };
      })()});
      removeButton.appendChild(document.createTextNode('Remove'));
      wrapper.appendChild(removeButton);
      optionsField.appendChild(wrapper);
    })
  };
  renderOptions(options);

  //
  // var buttons = [$('button'), $('button'), $('button')];
  // buttons.forEach(btn => {
  //   document.body.appendChild(btn);
  // });
  // for (var i = 0; i < buttons.length; i++) {
  //   buttons[i].onclick = function(i) {
  //     return function() {
  //       alert(i);
  //     }
  //   }()
  // }
  //

  document.querySelector('#addButton').onclick = function(e) {
    var idx = 1;
    while (options["Option " + idx]) idx++;
    options["Option " + idx] = "Value";
    renderOptions(options);
  }

  document.querySelector('form').onsubmit = function(e) {
    var settingsObj = {};
    if (qTypeSelectField.value === 'multiple_choice' ||
    qTypeSelectField.value === 'button_group'){
      Array.from(optionsField.children).forEach(function(div) {
        var key = div.children[0].children[0].value;
        var val = div.children[1].children[0].value;
        settingsObj[key] = val;
      })
    } else if (qTypeSelectField.value === 'game'){
      var val = gameField.children[0].children[0].value;
      settingsObj['GameID'] = val;
    } else if (qTypeSelectField.value === 'video'){
      settingsObj['url'] = videoUrlField.children[2].value;
    }
    document.querySelector('#realSettingsField textarea').value =
      JSON.stringify(settingsObj);
    return true;
    
  }

</script>
