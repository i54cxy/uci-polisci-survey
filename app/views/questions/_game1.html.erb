<!-- Modal -->
<div class="modal fade" id="successModal" tabindex="-1" role="dialog" data-backdrop="false" aria-labelledby="successModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle">Congratulations!</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>You have discovered how to make purple! Now there is one more part of this problem. Click Continue to proceed.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal" id="continueBtn">Continue</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="quitModal" tabindex="-1" role="dialog" data-backdrop="false" aria-labelledby="successModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle">Are you sure?</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Please try more bottles.  Remember you can try combinations of bottles also. Click Continue to try again.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal" id="continueBtn">Continue</button>
      </div>
    </div>
  </div>
</div>

<div style="position: relative">
  <div>
    <h5 id='selectedInfo'>Currently selected flasks: </h5>
  </div>
  <input type="text" name="answers[<%= question.id %>]" id ="gameInput" minlength="1" class="game-input">
  <canvas id='canvas'></canvas>
  <div>
    <div class="text-center">
      <button type="button" class="btn btn-primary fixed_width" id="gameBtn">Confirm Selection</button>
    </div>
  </div>

  <br/>
  <input type="hidden" name="qid" value="<%= question.id %>">
  <div class="question-desc additional">
    <p>In this experiment, what does the liquid in flask 1 do alone or interaction with the other liquids?</p>
    <textarea class="form-control" name="q1" rows="4" required></textarea>
  </div>
  <div class="question-desc additional">
    <p>In this experiment, what does the liquid in flask 2 do alone or interaction with the other liquids?</p>
    <textarea class="form-control" name="q2" rows="4" required></textarea>
  </div>
  <div class="question-desc additional">
    <p>In this experiment, what does the liquid in flask 3 do alone or interaction with the other liquids?</p>
    <textarea class="form-control" name="q3" rows="4" required></textarea>
  </div>
  <div class="question-desc additional">
    <p>In this experiment, what does the liquid in flask 4 do alone or interaction with the other liquids?</p>
    <textarea class="form-control" name="q4" rows="4" required></textarea>
  </div>
  
</div>

<% content_for :scripts do %>
  <script>

    var btnCheck = 0;
    document.querySelector("#sform").addEventListener("submit", function(e){
      if (btnCheck === 0){
        $("#quitModal").modal();
        btnCheck++;
        e.preventDefault();
      }
    });

    $("#exitLink").hide();
    $(".additional").hide();
    $("#submit_btn").prop('value', 'Quit');

    var stage = new createjs.Stage("canvas");
    stage.canvas.width = 600;
    stage.canvas.height = 400;
    stage.enableMouseOver(10);
    
    var flaskArr = [];
    var selectedFlasks = [];
    function game(){

      // var flaskPath = function(index) { return '/assets/flask'+index+'.svg';};
      // var emptyFlaskPath = function(index) { return '/assets/empty_flask'+index+'.svg';};

      var getFlask = function(index) { return queue.getResult("flask"+index); };
      var getEmptFlask = function(index) { return queue.getResult("empty_flask"+index); };

      // liquid in beaker
      var shape = new createjs.Shape().set({x:0,y:250});
      shape.cache(0,-250,250,250);
      var cmd = shape.graphics.f("#00FFFF").dr(32,-1,101,0).command;
      stage.addChild(shape);

      function renderFlask(index) {
        var image = getFlask(index);
        image.width = 512;
        image.height = 512;
        var flask = new createjs.Bitmap(image);
        // w = 512 , h= 512 , scale: 0.15625
        // flask.scaleX = 0.15625;
        // flask.scaleY = 0.15625;
        flask.scaleX = 80/image.width;
        flask.scaleY = 80/image.height;
        flask.id = index
        flask.x = 200;
        flask.y = 200;
        flask.alpha = 0.6;

        var width = image.width;
        flask.x += (index - 1) * (width/10 + 40);
        var hit = new createjs.Shape();
        hit.graphics.beginFill('#000').drawRect(0, 0, image.width, image.height);
        hit.cursor = 'pointer';
        flask.hitArea = hit;

        var setCoordinate = function() {
          var width = image.width;
          flask.x += (index - 1) * (width/10 + 40);
        };

        var setHitArea = function() {
          var hit = new createjs.Shape();
          hit.graphics.beginFill('#000').drawRect(0, 0, image.width, image.height);
          hit.cursor = 'pointer';
          flask.hitArea = hit;
        };

        // Wait for the images to load, then set their coordinates
        //   var t = setTimeout(function() {
        //     if (flask.getBounds()) {
        //       setCoordinate(); 
        //       setHitArea();
        //     }
        //     else t();
        //   }, 100);

        flask.addEventListener('click', function(e) {
          if (selectedFlasks.includes(flask.id)) {
          // Unselect the flask if selected
          selectedFlasks.splice(selectedFlasks.indexOf(flask.id), 1);
          flask.alpha = 0.6;
          } else {
          // Select the flask
          selectedFlasks.push(flask.id);
          flask.alpha = 1;
          }
          var info = 'Currently selected flasks: ';
          selectedFlasks.forEach(function(flaskId){
          info += 'Flask # '+ flaskId +'\n';
          });
          $(selectedInfo).html(info);
          stage.update();
        });
        flask.cursor = 'pointer';
        stage.addChild(flask);
        return flask;
      }

      var setupGame = function() {
        $(selectedInfo).html('Currently selected flasks: ');
        selectedFlasks = [];
        for (let index = 1; index <= 4; index++) {
            flaskArr[index] = renderFlask(index);
        }
      };

      setupGame();

      // var beaker = new createjs.Bitmap('/assets/beaker.svg');
      var beakerImg = queue.getResult("beaker");
      var beaker = new createjs.Bitmap(beakerImg);
      beaker.scaleX = 0.3;
      beaker.scaleY = 0.3;
      beaker.x = 0;
      beaker.y = 100;
      stage.addChild(beaker);

      var tweens = [];
      var renderPour = function (flask, index){
        // Using a Motion Guide
        curX = flask.x;
        curY = flask.y;
        // var emptImage = new Image();
        // emptImage.src = emptyFlaskPath(flask.id);
        var emptImage = getEmptFlask(flask.id);
        emptImage.width = 512;
        emptImage.height = 512;
        createjs.Tween.get(flask)
          .wait(2000*(index))
          .to({x:100, y:90, rotation:-100}, 700, createjs.Ease.quadOut)
          .to({image: emptImage}, 700)
          .to({x:curX, y:curY, rotation:0}, 700, createjs.Ease.quadOut);
        flask.setBounds(0,0,512,512)
      };

      var height = [-30, -60, -90, -120];
      // Liquid animation
      var renderBeaker = function (selectedFlasks, index){
        if (index >= selectedFlasks.length) {
            return;
        }
        var beTween = createjs.Tween.get(cmd)
          .wait(700)
          .to({x:32, y:-1, w:101, h:height[index]}, 700, createjs.Ease.quadOut)
          .wait(700)
          .call(handleComplete);
        function handleComplete(){
          renderBeaker(selectedFlasks, index+1);
        }
      };

info=`You have discovered how to make purple! We want you to <strong>keep experimenting</strong> and try to figure out what role each liquid plays in the reaction you just discovered.<br><br>
<strong>The Problem</strong>:  Find out what <strong>each flask of liquid does</strong>. “You have found a particular combination of liquids that makes purple. But what do all the liquids do, either alone or in combination? It is up to you to find out!<br><br>
<strong>To Solve the Problem</strong>: You need to try pouring different liquids from one or more of the small bottles in to the large beaker. You can try different liquids or combinations of liquids.When you are think that you discovered as much as you can about the liquids, please answer the four questions that follow below. When you are done push the “Continue” button.`

      var successCheck = 0;
      var proceedPartTwo = function() {
        if (successCheck === 0){
          $("#successModal").modal();
          successCheck++;
        }
        btnCheck++;
      }

      $("#continueBtn").click(function(){
        $("#desc_id_<%=question.id%>").children(0)[0].innerHTML = info;
        $("#submit_btn").prop('value', 'Continue');

        gameBtn.textContent = "Confirm Selection";
        // Clear all flasks
        flaskArr.forEach(function(flask){
          stage.removeChild(flask);
        });

        createjs.Tween.get(cmd)
        .to({x:32, y:-1, w:101, h:0}, 150, createjs.Ease.quadOut)
        
        var filter = new createjs.ColorFilter(0,0,0,1, 0,255,255,0);
        shape.filters = [filter];

        setupGame();

        $(".additional").show();
      });

      var gameBtn = document.getElementById("gameBtn");
      gameBtn.addEventListener("click", function(){
      // Confirm
        if ( gameBtn.textContent === "Confirm Selection" ) {
          // Pouring animation
          for (let index = 0; index < selectedFlasks.length; index++) {
            renderPour(flaskArr[selectedFlasks[index]], index);
          }
          // Recording answer
          document.getElementById('gameInput').value += selectedFlasks + '; ';
          renderBeaker(selectedFlasks,0);
          if ( selectedFlasks.includes(1) && selectedFlasks.includes(3) && !selectedFlasks.includes(2)){
            console.log("Bingo!");
            var filter = new createjs.ColorFilter(1,1,1,1);
            shape.filters = [filter];
            createjs.Tween.get(filter)
              .wait(2100*selectedFlasks.length)
              .to({redOffset:255, greenMultiplier:0.5, blueMultiplier:1}, 700, createjs.Ease.linear);
            setTimeout(proceedPartTwo, 2100*selectedFlasks.length+700+1500);
          }
          gameBtn.textContent = "Reset";
          // Making flasks unresponsive
          flaskArr.forEach(function(flask){
            flask.removeAllEventListeners();
          });
        // Reset
        } else if ( gameBtn.textContent === "Reset" ) {
          gameBtn.textContent = "Confirm Selection";
          // Clear all flasks
          flaskArr.forEach(function(flask){
            stage.removeChild(flask);
          });

          createjs.Tween.get(cmd)
          .to({x:32, y:-1, w:101, h:0}, 150, createjs.Ease.quadOut)
          
          var filter = new createjs.ColorFilter(0,0,0,1, 0,255,255,0);
          shape.filters = [filter];

          setupGame();
        }
      });

      createjs.Ticker.setFPS(60);
      createjs.Ticker.on("tick", tick);
      createjs.MotionGuidePlugin.install();
      function tick(event) {
        shape.updateCache();
        stage.update(event);
      };
    };

    var queue = new createjs.LoadQueue();
    queue.loadManifest([
      {src:"/assets/flask1.svg", id:"flask1", type:"image"},
      {src:"/assets/flask2.svg", id:"flask2", type:"image"},
      {src:"/assets/flask3.svg", id:"flask3", type:"image"},
      {src:"/assets/flask4.svg", id:"flask4", type:"image"},
      {src:"/assets/empty_flask1.svg", id:"empty_flask1", type:"image"},
      {src:"/assets/empty_flask2.svg", id:"empty_flask2", type:"image"},
      {src:"/assets/empty_flask3.svg", id:"empty_flask3", type:"image"},
      {src:"/assets/empty_flask4.svg", id:"empty_flask4", type:"image"},
      {src:"/assets/beaker.svg", id:"beaker", type:"image"}
      ]);
    queue.on("complete", game);
  </script>
<% end %>
